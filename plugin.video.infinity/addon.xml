<addon id="plugin.video.infinity" name="Infinity" provider-name="Infinity" version="6.6.01">
	<requires>
		<import addon="xbmc.python" version="3.0.0"/>
		<import addon="script.module.openscrapers"/>
		<import addon="script.module.requests"/>
		<import addon="script.module.beautifulsoup4"/>
		<import addon="script.module.metahandler" optional="true"/>
		<import addon="plugin.video.youtube" optional="true"/>
		<import addon="script.module.myaccounts" />
		<import addon="script.module.resolveurl"/>
		<import addon="script.module.pytz" />
	</requires>
	<extension point="xbmc.python.pluginsource" library="umbrella.py">
		<provides>video</provides>
	</extension>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="resources\lib\context\addtoLibrary.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Add to Library</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.infinity.addtoLibrary)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.infinity/) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\traktManager.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Trakt Manager</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.infinity.traktManager)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.infinity/) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\clearProviders.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Clear Providers</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.infinity.clearProviders)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.infinity/?action=play) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]] |
					[String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(infinity.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(infinity.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="resources\lib\context\clearBookmark.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Clear Item Bookmark</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.infinity.clearBookmark)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.infinity/?action=play) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					ListItem.IsResumable +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\rescrape.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Rescrape Item</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.infinity.rescrape)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.infinity/?action=play) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="resources\lib\context\libRescrape.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Rescrape Lib Item</label>
				<visible>
					[String.Contains(Container.FolderPath,videodb://) | String.Contains(Container.ListItem.FolderPath,videodb://)] +
					[String.Contains(Container.ListItem.Path,Window(home).Property(infinity.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(infinity.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\playFromHere.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Play from here</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.infinity.playFromHere)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.infinity/) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
			<item library="resources\lib\context\autoPlay.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(infinity.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.infinity.autoPlay)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.infinity/?action=play) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\sourceSelect.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(infinity.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.infinity.sourceSelect)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.infinity/?action=play) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\findSimilar.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Find Similar</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.infinity.findSimilar)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.infinity/) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\browseSeries.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Browse Series</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.infinity.browseSeries)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.infinity/) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>
			<item library="resources\lib\context\browseEpisodes.py">
				<label>$INFO[Window(home).Property(context.infinity.showinfinity)]Browse Episodes</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.infinity.browseEpisodes)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.infinity/) +
					String.IsEqual(ListItem.Property(isInfinity_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.service" library="service.py" start="startup"/>
	<extension point="xbmc.python.module" library="resources/lib/"/>
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>true</reuselanguageinvoker>
		<summary lang="en">Infinity We do not host any of the contents streamed</summary>
		<description lang="en">[B]Infinity[/B][CR] This addon does not form part of the Kodi Media Centre. Please do not seek assistance with this addon from any of the Official Kodi Support Channels.[CR]The author does not host any of the content in this addon and takes no responsibility for content found. We do not know anything about a lab under Raccoon City.</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum/>
		<website></website>
		<source></source>
		<disclaimer lang="en">The author of this addon does not host any of the content which is found and have no affiliation with any of the content providers. This addon simply searches websites for content. Use at your own risk!</disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.png</fanart>
		</assets>
		<news>
[B]Update - v6.6.247 - June 28th, 2023[/B]
--[ENHANCEMENT] Added Poster artwork on resolving popup.
--[ENHANCEMENT] Modified limit of hidden trakt items to sync from 1000 to 2000.
--[ENHANCEMENT] Applied trakt hidden items filter to Progress Shows - More later once decided among users..
--[ENHANCEMENT] Added option to remove Umbrella text from context menu items.
--[LOGGING] Added some logging to track play action.
--[REMOVAL] Removed Furk from addon. It will no longer be supported.
		</news>
	</extension>
</addon>